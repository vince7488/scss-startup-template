{
  "compilerOptions": {
    // Basic Options
    "composite": true,
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
    "target": "ESNext",         // Target ECMAScript version (e.g., ES6, ESNext)
    "noEmit": true,
    "skipLibCheck": true,
    "module": "ESNext",         // Module system (CommonJS, AMD, ESNext, etc.)
    "lib": ["ESNext", "DOM"],   // Include library types (DOM, WebWorker, etc.)
    "jsx": "preserve",          // How to handle JSX (react, react-native, preserve)

    // Strictness & Type Checking
    "strict": true,              // Enable all strict type-checking options
    "noImplicitAny": true,      // Disallow implicit 'any' types
    "strictNullChecks": true,    // Enable strict null checks
    "noUnusedLocals": true,     // Warn about unused local variables
    "noUnusedParameters": true,  // Warn about unused function parameters
    "noImplicitReturns": true,   // Ensure all code paths in a function return a value
    "noFallthroughCasesInSwitch": true, // Warn about fallthrough cases in switch statements

    // Module Resolution
    "moduleResolution": "Node",    // How modules are resolved (node, classic)
    "baseUrl": "./src",           // Base directory for resolving non-absolute module names
    "paths": {                    // Path mapping for module resolution
      "@/*": ["./src/*"],
      "@components/*": ["./src/components/*"]
    },

    // Additional Options
    "esModuleInterop": true,         // Enables emit interoperability between CommonJS and ES Modules
    "allowSyntheticDefaultImports": true, // Allow default imports from modules with no default export
    "forceConsistentCasingInFileNames": true, // Disallow inconsistently-cased references to the same file.
    "resolveJsonModule": true,       // Allows importing modules with a ‘.json’ extension
    "isolatedModules": true,         // Transpile each file as a separate module (similar to ‘ts.transpileModule’)
    "declaration": true,            // Generate corresponding ‘.d.ts’ file
    "sourceMap": true,               // Generates corresponding ‘.map’ file
    "removeComments": true,          // Do not emit comments to output
    "outDir": "./dist",             // Redirect output structure to the directory

    // Experimental Options (Use with caution)
    "experimentalDecorators": true, // Enable experimental support for decorators
    "emitDecoratorMetadata": true   // Emit design-type metadata for decorated declarations
  },
  // Exclude files/folders from compilation
  "exclude": ["node_modules", "dist", "**/*.spec.ts"],

  // Include files/folders for compilation
  "include": ["src/**/*.ts", "src/**/*.tsx", "webpack.config.ts", "vite.config.ts"]
}